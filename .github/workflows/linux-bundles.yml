name: build-linux-bundles

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 2"

jobs:
  build-multiarch-bundles:
    name: Build multiarch bundles
    strategy:
      matrix:
        os: [x64, arm64]
        flake: [vim, fish, git, jj, helix, browsh, 1password, ttyd-nerd]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Setup Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build ${{ matrix.flake }} flake bundles
        run: |
          mkdir -p appimage deb rpm
          nix bundle -o "./${{ matrix.os }}-${{ matrix.out }}-appimage" --bundler github:ralismark/nix-appimage "./${{ matrix.flake }}"
          cp "./${{ matrix.os }}-${{ matrix.out }}-appimage" "./appimage/${{ matrix.flake }}-amd64.appimage"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.flake }}-deb" --bundler github:nixos/bundlers#toDEB "./${{ matrix.flake }}"
          cp "./${{ matrix.os }}-${{ matrix.flake }}-deb"/*.deb "./deb/${{ matrix.flake }}-amd64.deb"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.flake }}-rpm" --bundler github:nixos/bundlers#toRPM "./${{ matrix.flake }}"
          cp "./${{ matrix.os }}-${{ matrix.flake }}-rpm"/*.rpm "./rpm/${{ matrix.flake }}-amd64.rpm"
          nix run nixpkgs#tree

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.flake }}
          path: |
            ./appimage/*.appimage
            ./rpm/*.rpm
            ./deb/*.deb

  build-custom-bundles:
    name: Build custom flake bundles
    strategy:
      matrix:
        include:
          - os: x64
            flake: "./fish#tmux"
            out: "tmux"
          - os: arm64
            flake: "./fish#tmux"
            out: "tmux"
          - os: x64
            flake: "./fish#zellij"
            out: "zellij"
          - os: arm64
            flake: "./fish#zellij"
            out: "zellij"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Setup Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build ${{ matrix.flake }} flake bundles
        run: |
          mkdir -p appimage deb rpm
          nix bundle -o "./${{ matrix.os }}-${{ matrix.out }}-appimage" --bundler github:ralismark/nix-appimage "${{ matrix.flake }}"
          cp "./${{ matrix.os }}-${{ matrix.out }}-appimage" "./appimage/${{ matrix.out }}-amd64.appimage"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.out }}-deb" --bundler github:nixos/bundlers#toDEB "${{ matrix.flake }}"
          cp "./${{ matrix.os }}-${{ matrix.out }}-deb"/*.deb "./deb/${{ matrix.out }}-amd64.deb"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.out }}-rpm" --bundler github:nixos/bundlers#toRPM "${{ matrix.flake }}"
          cp "./${{ matrix.os }}-${{ matrix.out }}-rpm"/*.rpm "./rpm/${{ matrix.out }}-amd64.rpm"
          nix run nixpkgs#tree

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.out }}
          path: |
            ./appimage/*.appimage
            ./rpm/*.rpm
            ./deb/*.deb

  push-releases:
    name: Push releases
    runs-on: ubuntu-latest
    needs: [build-multiarch-bundles, build-custom-bundles]
    steps:
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Setup Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Download bundles
        uses: actions/download-artifact@v4

      - name: Build ${{ matrix.flake }} flake
        run: |
          nix run nixpkgs#tree

      - name: Create appimage release with flake executables
        uses: ncipollo/release-action@v1
        with:
          artifacts: './*/appimage/*.appimage'
          tag: "appimages"
          artifactErrorsFailBuild: false
          allowUpdates: true

      - name: Create deb/rpm release with flake executables
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./*/deb/*.deb,./*/rpm/*.rpm"
          tag: "packages"
          artifactErrorsFailBuild: false
          allowUpdates: true
