name: build-linux-bundles

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 2"

jobs:
  build-multiarch-bundles:
    name: Build multiarch bundles
    strategy:
      matrix:
        os: [x64, arm64]
        flake: [vim, fish, git, helix, browsh]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Setup Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build ${{ matrix.flake }} flake bundles
        run: |
          release="${{ matrix.flake }}-$(arch)"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.flake }}-appimage/$release.appimage" --bundler github:ralismark/nix-appimage "./${{ matrix.flake }}"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.flake }}-deb/$release.deb" --bundler github:nixos/bundlers#toDEB "./${{ matrix.flake }}"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.flake }}-rpm/$release.rpm" --bundler github:nixos/bundlers#toRPM "./${{ matrix.flake }}"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.flake }}
          path: |
            ./${{ matrix.os }}-${{ matrix.flake }}-appimage
            ./${{ matrix.os }}-${{ matrix.flake }}-deb
            ./${{ matrix.os }}-${{ matrix.flake }}-rpm

  build-custom-flake-appimages:
    name: Build custom flake appimages
    strategy:
      matrix:
        include:
          - os: x64
            flake: "./fish#tmux"
            out: "tmux"
          - os: arm64
            flake: "./fish#tmux"
            out: "tmux"
          - os: x64
            flake: "./fish#zellij"
            out: "zellij"
          - os: arm64
            flake: "./fish#zellij"
            out: "zellij"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Setup Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build ${{ matrix.flake }} flake bundles
        run: |
          release="${{ matrix.out }}-$(arch)"
          mkdir -p ./out
          nix bundle -o "./${{ matrix.os }}-${{ matrix.out }}-appimage/$release.appimage" --bundler github:ralismark/nix-appimage "${{ matrix.flake }}"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.out }}-deb/$release.deb" --bundler github:nixos/bundlers#toDEB "${{ matrix.flake }}"
          nix bundle -o "./${{ matrix.os }}-${{ matrix.out }}-rpm/$release.rpm" --bundler github:nixos/bundlers#toRPM "${{ matrix.flake }}"

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.out }}
          path: |
            ./${{ matrix.os }}-${{ matrix.out }}-appimage
            ./${{ matrix.os }}-${{ matrix.out }}-deb
            ./${{ matrix.os }}-${{ matrix.out }}-rpm

  push-releases:
    name: Push releases
    runs-on: ubuntu-latest
    steps:
      - name: Download bundles
        uses: actions/download-artifact@v4

      - name: Create appimage release with flake executables
        uses: ncipollo/release-action@v1
        with:
          artifacts: './*/*.appimage'
          tag: "appimages"
          artifactErrorsFailBuild: false
          allowUpdates: true

      - name: Create deb/rpm release with flake executables
        uses: ncipollo/release-action@v1
        with:
          artifacts: "./*/*.deb,./*/*.rpm"
          tag: "packages"
          artifactErrorsFailBuild: false
          allowUpdates: true
