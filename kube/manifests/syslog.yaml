---
apiVersion: v1
kind: ConfigMap
metadata:
  name: syslog-conf
  namespace: monitoring
data:
  # reminder, syslog-ng.conf breaks if you don't append a newline
  syslog-ng.conf: |
    @version: 4.2
    @include "/config/conf.d/*.conf"

  linux.conf: |
    source linux_remote {
      tcp(ip(0.0.0.0) port(1514));
    };
    destination linux_log {
      file(
        "/logs/linux/${HOST}/${YEAR}_${MONTH}_${DAY}.log"
        create-dirs(yes)
      );
    };
    log {
      source(linux_remote);
      destination(linux_log);
    };

  unifi.conf: |
    source unifi_remote {
      udp(ip(0.0.0.0) port(514));
    };
    destination unifi_log {
      file(
        "/logs/unifi/${HOST}/${YEAR}_${MONTH}_${DAY}.log"
        create-dirs(yes)
      );
    };
    log {
      source(unifi_remote);
      destination(unifi_log);
    };

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: syslog
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: syslog
  template:
    metadata:
      labels:
        app: syslog
    spec:
      hostname: syslog
      securityContext:
        fsGroup: 1000
      containers:
      - name: syslog
        image: docker.io/linuxserver/syslog-ng:4.8.1
        env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: LOG_TO_STDOUT
            value: "true"
        ports:
          - name: syslog-0
            containerPort: 514
            protocol: UDP
          - name: syslog-1
            containerPort: 1514
            protocol: TCP
        volumeMounts:
          - mountPath: /logs
            name: logs
          - name: syslog-conf
            mountPath: /config/syslog-ng.conf
            subPath: syslog-ng.conf
          - name: syslog-conf-d
            mountPath: /config/conf.d
          - mountPath: /config
            name: syslog-ng-config-dir # syslog-ng writes to /config a bunch to function
      volumes:
        - name: logs
          hostPath:
            path: /media/data-ssd/syslog
            type: Directory
        - name: syslog-ng-config-dir
          emptyDir:
            sizeLimit: 1Gi
        - name: syslog-conf
          configMap:
            name: syslog-conf
            items:
            - key: syslog-ng.conf
              path: syslog-ng.conf
        - name: syslog-conf-d
          configMap:
            name: syslog-conf
            items:
              - key: linux.conf
                path: linux.conf
              - key: unifi.conf
                path: unifi.conf
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: logs-cleanup
  namespace: monitoring
spec:
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: logs-cleanup
              image: docker.io/ubuntu:24.04
              imagePullPolicy: IfNotPresent
              command: ["/bin/sh", "-c"]
              args:
                - find /logs -type f -mtime +30 -exec rm -f {} \; ;
              volumeMounts:
                - name: logs
                  mountPath: "/logs"
          restartPolicy: OnFailure
          volumes:
            - name: logs
              hostPath:
                path: /media/data-ssd/syslog
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logbash-conf
  namespace: monitoring
data:
  config.sh: |-
    export linux_log_target="/logs/linux/*.log"
    export unifi_log_target="/logs/unifi/*.log"
    # Uncomment default_find_mime_time if you want logbash to default to only search for files modified within a certain time:
    export default_find_mime_time='-1' ## Defaults to one day
    # Uncomment for minor performance improvements in grep
    export LC_ALL=C
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logbash
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logbash
  template:
    metadata:
      labels:
        app: logbash
    spec:
      hostname: logbash
      containers:
      - name: logbash
        image: docker.io/heywoodlh/logbash:578c00e
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "while true; do sleep 30; done;" ]
        volumeMounts:
          - mountPath: /logs
            name: logs
          - name: logbash-conf
            mountPath: /app
      volumes:
        - name: logs
          hostPath:
            path: /media/data-ssd/syslog
            type: Directory
        - name: logbash-conf
          configMap:
            name: logbash-conf
            items:
            - key: config.sh
              path: config.sh
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: syslog
  name: syslog
  namespace: monitoring
  annotations:
    tailscale.com/expose: "true"
    tailscale.com/hostname: "syslog"
    tailscale.com/tags: "tag:syslog"
spec:
  ports:
    - name: syslog-0
      port: 514
      protocol: UDP
      targetPort: syslog-0
    - name: syslog-1
      port: 1514
      protocol: TCP
      targetPort: syslog-1
  selector:
    app: syslog
  type: ClusterIP
