apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"node-feature-discovery"}}
    name: node-feature-discovery
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.16.3
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.16.3"},"name":"nodefeaturegroups.nfd.k8s-sigs.io"},"spec":{"group":"nfd.k8s-sigs.io","names":{"kind":"NodeFeatureGroup","listKind":"NodeFeatureGroupList","plural":"nodefeaturegroups","shortNames":["nfg"],"singular":"nodefeaturegroup"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"NodeFeatureGroup resource holds Node pools by featureGroup","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Spec defines the rules to be evaluated.","properties":{"featureGroupRules":{"description":"List of rules to evaluate to determine nodes that belong in this group.","items":{"description":"GroupRule defines a rule for nodegroup filtering.","properties":{"matchAny":{"description":"MatchAny specifies a list of matchers one of which must match.","items":{"description":"MatchAnyElem specifies one sub-matcher of MatchAny.","properties":{"matchFeatures":{"description":"MatchFeatures specifies a set of matcher terms all of which must match.","items":{"description":"FeatureMatcherTerm defines requirements against one feature set. All\nrequirements (specified as MatchExpressions) are evaluated against each\nelement in the feature set.","properties":{"feature":{"description":"Feature is the name of the feature set to match against.","type":"string"},"matchExpressions":{"additionalProperties":{"description":"MatchExpression specifies an expression to evaluate against a set of input\nvalues. It contains an operator that is applied when matching the input and\nan array of values that the operator evaluates the input against.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"},"description":"MatchExpressions is the set of per-element expressions evaluated. These\nmatch against the value of the specified elements.","type":"object"},"matchName":{"description":"MatchName in an expression that is matched against the name of each\nelement in the feature set.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"}},"required":["feature"],"type":"object"},"type":"array"}},"required":["matchFeatures"],"type":"object"},"type":"array"},"matchFeatures":{"description":"MatchFeatures specifies a set of matcher terms all of which must match.","items":{"description":"FeatureMatcherTerm defines requirements against one feature set. All\nrequirements (specified as MatchExpressions) are evaluated against each\nelement in the feature set.","properties":{"feature":{"description":"Feature is the name of the feature set to match against.","type":"string"},"matchExpressions":{"additionalProperties":{"description":"MatchExpression specifies an expression to evaluate against a set of input\nvalues. It contains an operator that is applied when matching the input and\nan array of values that the operator evaluates the input against.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"},"description":"MatchExpressions is the set of per-element expressions evaluated. These\nmatch against the value of the specified elements.","type":"object"},"matchName":{"description":"MatchName in an expression that is matched against the name of each\nelement in the feature set.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"}},"required":["feature"],"type":"object"},"type":"array"},"name":{"description":"Name of the rule.","type":"string"}},"required":["name"],"type":"object"},"type":"array"}},"required":["featureGroupRules"],"type":"object"},"status":{"description":"Status of the NodeFeatureGroup after the most recent evaluation of the\nspecification.","properties":{"nodes":{"description":"Nodes is a list of FeatureGroupNode in the cluster that match the featureGroupRules","items":{"properties":{"name":{"description":"Name of the node.","type":"string"}},"required":["name"],"type":"object"},"type":"array","x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"}},"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    name: nodefeaturegroups.nfd.k8s-sigs.io
  spec:
    group: nfd.k8s-sigs.io
    names:
      kind: NodeFeatureGroup
      listKind: NodeFeatureGroupList
      plural: nodefeaturegroups
      shortNames:
      - nfg
      singular: nodefeaturegroup
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: NodeFeatureGroup resource holds Node pools by featureGroup
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the rules to be evaluated.
              properties:
                featureGroupRules:
                  description: List of rules to evaluate to determine nodes that belong
                    in this group.
                  items:
                    description: GroupRule defines a rule for nodegroup filtering.
                    properties:
                      matchAny:
                        description: MatchAny specifies a list of matchers one of
                          which must match.
                        items:
                          description: MatchAnyElem specifies one sub-matcher of MatchAny.
                          properties:
                            matchFeatures:
                              description: MatchFeatures specifies a set of matcher
                                terms all of which must match.
                              items:
                                description: |-
                                  FeatureMatcherTerm defines requirements against one feature set. All
                                  requirements (specified as MatchExpressions) are evaluated against each
                                  element in the feature set.
                                properties:
                                  feature:
                                    description: Feature is the name of the feature
                                      set to match against.
                                    type: string
                                  matchExpressions:
                                    additionalProperties:
                                      description: |-
                                        MatchExpression specifies an expression to evaluate against a set of input
                                        values. It contains an operator that is applied when matching the input and
                                        an array of values that the operator evaluates the input against.
                                      properties:
                                        op:
                                          description: Op is the operator to be applied.
                                          enum:
                                          - In
                                          - NotIn
                                          - InRegexp
                                          - Exists
                                          - DoesNotExist
                                          - Gt
                                          - Lt
                                          - GtLt
                                          - IsTrue
                                          - IsFalse
                                          type: string
                                        value:
                                          description: |-
                                            Value is the list of values that the operand evaluates the input
                                            against. Value should be empty if the operator is Exists, DoesNotExist,
                                            IsTrue or IsFalse. Value should contain exactly one element if the
                                            operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                            In other cases Value should contain at least one element.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - op
                                      type: object
                                    description: |-
                                      MatchExpressions is the set of per-element expressions evaluated. These
                                      match against the value of the specified elements.
                                    type: object
                                  matchName:
                                    description: |-
                                      MatchName in an expression that is matched against the name of each
                                      element in the feature set.
                                    properties:
                                      op:
                                        description: Op is the operator to be applied.
                                        enum:
                                        - In
                                        - NotIn
                                        - InRegexp
                                        - Exists
                                        - DoesNotExist
                                        - Gt
                                        - Lt
                                        - GtLt
                                        - IsTrue
                                        - IsFalse
                                        type: string
                                      value:
                                        description: |-
                                          Value is the list of values that the operand evaluates the input
                                          against. Value should be empty if the operator is Exists, DoesNotExist,
                                          IsTrue or IsFalse. Value should contain exactly one element if the
                                          operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                          In other cases Value should contain at least one element.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - op
                                    type: object
                                required:
                                - feature
                                type: object
                              type: array
                          required:
                          - matchFeatures
                          type: object
                        type: array
                      matchFeatures:
                        description: MatchFeatures specifies a set of matcher terms
                          all of which must match.
                        items:
                          description: |-
                            FeatureMatcherTerm defines requirements against one feature set. All
                            requirements (specified as MatchExpressions) are evaluated against each
                            element in the feature set.
                          properties:
                            feature:
                              description: Feature is the name of the feature set
                                to match against.
                              type: string
                            matchExpressions:
                              additionalProperties:
                                description: |-
                                  MatchExpression specifies an expression to evaluate against a set of input
                                  values. It contains an operator that is applied when matching the input and
                                  an array of values that the operator evaluates the input against.
                                properties:
                                  op:
                                    description: Op is the operator to be applied.
                                    enum:
                                    - In
                                    - NotIn
                                    - InRegexp
                                    - Exists
                                    - DoesNotExist
                                    - Gt
                                    - Lt
                                    - GtLt
                                    - IsTrue
                                    - IsFalse
                                    type: string
                                  value:
                                    description: |-
                                      Value is the list of values that the operand evaluates the input
                                      against. Value should be empty if the operator is Exists, DoesNotExist,
                                      IsTrue or IsFalse. Value should contain exactly one element if the
                                      operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                      In other cases Value should contain at least one element.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - op
                                type: object
                              description: |-
                                MatchExpressions is the set of per-element expressions evaluated. These
                                match against the value of the specified elements.
                              type: object
                            matchName:
                              description: |-
                                MatchName in an expression that is matched against the name of each
                                element in the feature set.
                              properties:
                                op:
                                  description: Op is the operator to be applied.
                                  enum:
                                  - In
                                  - NotIn
                                  - InRegexp
                                  - Exists
                                  - DoesNotExist
                                  - Gt
                                  - Lt
                                  - GtLt
                                  - IsTrue
                                  - IsFalse
                                  type: string
                                value:
                                  description: |-
                                    Value is the list of values that the operand evaluates the input
                                    against. Value should be empty if the operator is Exists, DoesNotExist,
                                    IsTrue or IsFalse. Value should contain exactly one element if the
                                    operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                    In other cases Value should contain at least one element.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - op
                              type: object
                          required:
                          - feature
                          type: object
                        type: array
                      name:
                        description: Name of the rule.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              required:
              - featureGroupRules
              type: object
            status:
              description: |-
                Status of the NodeFeatureGroup after the most recent evaluation of the
                specification.
              properties:
                nodes:
                  description: Nodes is a list of FeatureGroupNode in the cluster
                    that match the featureGroupRules
                  items:
                    properties:
                      name:
                        description: Name of the node.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                  - name
                  x-kubernetes-list-type: map
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.16.3
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.16.3"},"name":"nodefeaturerules.nfd.k8s-sigs.io"},"spec":{"group":"nfd.k8s-sigs.io","names":{"kind":"NodeFeatureRule","listKind":"NodeFeatureRuleList","plural":"nodefeaturerules","shortNames":["nfr"],"singular":"nodefeaturerule"},"scope":"Cluster","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"NodeFeatureRule resource specifies a configuration for feature-based\ncustomization of node objects, such as node labeling.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Spec defines the rules to be evaluated.","properties":{"rules":{"description":"Rules is a list of node customization rules.","items":{"description":"Rule defines a rule for node customization such as labeling.","properties":{"annotations":{"additionalProperties":{"type":"string"},"description":"Annotations to create if the rule matches.","type":"object"},"extendedResources":{"additionalProperties":{"type":"string"},"description":"ExtendedResources to create if the rule matches.","type":"object"},"labels":{"additionalProperties":{"type":"string"},"description":"Labels to create if the rule matches.","type":"object"},"labelsTemplate":{"description":"LabelsTemplate specifies a template to expand for dynamically generating\nmultiple labels. Data (after template expansion) must be keys with an\noptional value (\u003ckey\u003e[=\u003cvalue\u003e]) separated by newlines.","type":"string"},"matchAny":{"description":"MatchAny specifies a list of matchers one of which must match.","items":{"description":"MatchAnyElem specifies one sub-matcher of MatchAny.","properties":{"matchFeatures":{"description":"MatchFeatures specifies a set of matcher terms all of which must match.","items":{"description":"FeatureMatcherTerm defines requirements against one feature set. All\nrequirements (specified as MatchExpressions) are evaluated against each\nelement in the feature set.","properties":{"feature":{"description":"Feature is the name of the feature set to match against.","type":"string"},"matchExpressions":{"additionalProperties":{"description":"MatchExpression specifies an expression to evaluate against a set of input\nvalues. It contains an operator that is applied when matching the input and\nan array of values that the operator evaluates the input against.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"},"description":"MatchExpressions is the set of per-element expressions evaluated. These\nmatch against the value of the specified elements.","type":"object"},"matchName":{"description":"MatchName in an expression that is matched against the name of each\nelement in the feature set.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"}},"required":["feature"],"type":"object"},"type":"array"}},"required":["matchFeatures"],"type":"object"},"type":"array"},"matchFeatures":{"description":"MatchFeatures specifies a set of matcher terms all of which must match.","items":{"description":"FeatureMatcherTerm defines requirements against one feature set. All\nrequirements (specified as MatchExpressions) are evaluated against each\nelement in the feature set.","properties":{"feature":{"description":"Feature is the name of the feature set to match against.","type":"string"},"matchExpressions":{"additionalProperties":{"description":"MatchExpression specifies an expression to evaluate against a set of input\nvalues. It contains an operator that is applied when matching the input and\nan array of values that the operator evaluates the input against.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"},"description":"MatchExpressions is the set of per-element expressions evaluated. These\nmatch against the value of the specified elements.","type":"object"},"matchName":{"description":"MatchName in an expression that is matched against the name of each\nelement in the feature set.","properties":{"op":{"description":"Op is the operator to be applied.","enum":["In","NotIn","InRegexp","Exists","DoesNotExist","Gt","Lt","GtLt","IsTrue","IsFalse"],"type":"string"},"value":{"description":"Value is the list of values that the operand evaluates the input\nagainst. Value should be empty if the operator is Exists, DoesNotExist,\nIsTrue or IsFalse. Value should contain exactly one element if the\noperator is Gt or Lt and exactly two elements if the operator is GtLt.\nIn other cases Value should contain at least one element.","items":{"type":"string"},"type":"array"}},"required":["op"],"type":"object"}},"required":["feature"],"type":"object"},"type":"array"},"name":{"description":"Name of the rule.","type":"string"},"taints":{"description":"Taints to create if the rule matches.","items":{"description":"The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.","properties":{"effect":{"description":"Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.","type":"string"},"key":{"description":"Required. The taint key to be applied to a node.","type":"string"},"timeAdded":{"description":"TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints.","format":"date-time","type":"string"},"value":{"description":"The taint value corresponding to the taint key.","type":"string"}},"required":["effect","key"],"type":"object"},"type":"array"},"vars":{"additionalProperties":{"type":"string"},"description":"Vars is the variables to store if the rule matches. Variables do not\ndirectly inflict any changes in the node object. However, they can be\nreferenced from other rules enabling more complex rule hierarchies,\nwithout exposing intermediary output values as labels.","type":"object"},"varsTemplate":{"description":"VarsTemplate specifies a template to expand for dynamically generating\nmultiple variables. Data (after template expansion) must be keys with an\noptional value (\u003ckey\u003e[=\u003cvalue\u003e]) separated by newlines.","type":"string"}},"required":["name"],"type":"object"},"type":"array"}},"required":["rules"],"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true}]}}
    name: nodefeaturerules.nfd.k8s-sigs.io
  spec:
    group: nfd.k8s-sigs.io
    names:
      kind: NodeFeatureRule
      listKind: NodeFeatureRuleList
      plural: nodefeaturerules
      shortNames:
      - nfr
      singular: nodefeaturerule
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            NodeFeatureRule resource specifies a configuration for feature-based
            customization of node objects, such as node labeling.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the rules to be evaluated.
              properties:
                rules:
                  description: Rules is a list of node customization rules.
                  items:
                    description: Rule defines a rule for node customization such as
                      labeling.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to create if the rule matches.
                        type: object
                      extendedResources:
                        additionalProperties:
                          type: string
                        description: ExtendedResources to create if the rule matches.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels to create if the rule matches.
                        type: object
                      labelsTemplate:
                        description: |-
                          LabelsTemplate specifies a template to expand for dynamically generating
                          multiple labels. Data (after template expansion) must be keys with an
                          optional value (<key>[=<value>]) separated by newlines.
                        type: string
                      matchAny:
                        description: MatchAny specifies a list of matchers one of
                          which must match.
                        items:
                          description: MatchAnyElem specifies one sub-matcher of MatchAny.
                          properties:
                            matchFeatures:
                              description: MatchFeatures specifies a set of matcher
                                terms all of which must match.
                              items:
                                description: |-
                                  FeatureMatcherTerm defines requirements against one feature set. All
                                  requirements (specified as MatchExpressions) are evaluated against each
                                  element in the feature set.
                                properties:
                                  feature:
                                    description: Feature is the name of the feature
                                      set to match against.
                                    type: string
                                  matchExpressions:
                                    additionalProperties:
                                      description: |-
                                        MatchExpression specifies an expression to evaluate against a set of input
                                        values. It contains an operator that is applied when matching the input and
                                        an array of values that the operator evaluates the input against.
                                      properties:
                                        op:
                                          description: Op is the operator to be applied.
                                          enum:
                                          - In
                                          - NotIn
                                          - InRegexp
                                          - Exists
                                          - DoesNotExist
                                          - Gt
                                          - Lt
                                          - GtLt
                                          - IsTrue
                                          - IsFalse
                                          type: string
                                        value:
                                          description: |-
                                            Value is the list of values that the operand evaluates the input
                                            against. Value should be empty if the operator is Exists, DoesNotExist,
                                            IsTrue or IsFalse. Value should contain exactly one element if the
                                            operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                            In other cases Value should contain at least one element.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - op
                                      type: object
                                    description: |-
                                      MatchExpressions is the set of per-element expressions evaluated. These
                                      match against the value of the specified elements.
                                    type: object
                                  matchName:
                                    description: |-
                                      MatchName in an expression that is matched against the name of each
                                      element in the feature set.
                                    properties:
                                      op:
                                        description: Op is the operator to be applied.
                                        enum:
                                        - In
                                        - NotIn
                                        - InRegexp
                                        - Exists
                                        - DoesNotExist
                                        - Gt
                                        - Lt
                                        - GtLt
                                        - IsTrue
                                        - IsFalse
                                        type: string
                                      value:
                                        description: |-
                                          Value is the list of values that the operand evaluates the input
                                          against. Value should be empty if the operator is Exists, DoesNotExist,
                                          IsTrue or IsFalse. Value should contain exactly one element if the
                                          operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                          In other cases Value should contain at least one element.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - op
                                    type: object
                                required:
                                - feature
                                type: object
                              type: array
                          required:
                          - matchFeatures
                          type: object
                        type: array
                      matchFeatures:
                        description: MatchFeatures specifies a set of matcher terms
                          all of which must match.
                        items:
                          description: |-
                            FeatureMatcherTerm defines requirements against one feature set. All
                            requirements (specified as MatchExpressions) are evaluated against each
                            element in the feature set.
                          properties:
                            feature:
                              description: Feature is the name of the feature set
                                to match against.
                              type: string
                            matchExpressions:
                              additionalProperties:
                                description: |-
                                  MatchExpression specifies an expression to evaluate against a set of input
                                  values. It contains an operator that is applied when matching the input and
                                  an array of values that the operator evaluates the input against.
                                properties:
                                  op:
                                    description: Op is the operator to be applied.
                                    enum:
                                    - In
                                    - NotIn
                                    - InRegexp
                                    - Exists
                                    - DoesNotExist
                                    - Gt
                                    - Lt
                                    - GtLt
                                    - IsTrue
                                    - IsFalse
                                    type: string
                                  value:
                                    description: |-
                                      Value is the list of values that the operand evaluates the input
                                      against. Value should be empty if the operator is Exists, DoesNotExist,
                                      IsTrue or IsFalse. Value should contain exactly one element if the
                                      operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                      In other cases Value should contain at least one element.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - op
                                type: object
                              description: |-
                                MatchExpressions is the set of per-element expressions evaluated. These
                                match against the value of the specified elements.
                              type: object
                            matchName:
                              description: |-
                                MatchName in an expression that is matched against the name of each
                                element in the feature set.
                              properties:
                                op:
                                  description: Op is the operator to be applied.
                                  enum:
                                  - In
                                  - NotIn
                                  - InRegexp
                                  - Exists
                                  - DoesNotExist
                                  - Gt
                                  - Lt
                                  - GtLt
                                  - IsTrue
                                  - IsFalse
                                  type: string
                                value:
                                  description: |-
                                    Value is the list of values that the operand evaluates the input
                                    against. Value should be empty if the operator is Exists, DoesNotExist,
                                    IsTrue or IsFalse. Value should contain exactly one element if the
                                    operator is Gt or Lt and exactly two elements if the operator is GtLt.
                                    In other cases Value should contain at least one element.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - op
                              type: object
                          required:
                          - feature
                          type: object
                        type: array
                      name:
                        description: Name of the rule.
                        type: string
                      taints:
                        description: Taints to create if the rule matches.
                        items:
                          description: |-
                            The node this Taint is attached to has the "effect" on
                            any pod that does not tolerate the Taint.
                          properties:
                            effect:
                              description: |-
                                Required. The effect of the taint on pods
                                that do not tolerate the taint.
                                Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: Required. The taint key to be applied to
                                a node.
                              type: string
                            timeAdded:
                              description: |-
                                TimeAdded represents the time at which the taint was added.
                                It is only written for NoExecute taints.
                              format: date-time
                              type: string
                            value:
                              description: The taint value corresponding to the taint
                                key.
                              type: string
                          required:
                          - effect
                          - key
                          type: object
                        type: array
                      vars:
                        additionalProperties:
                          type: string
                        description: |-
                          Vars is the variables to store if the rule matches. Variables do not
                          directly inflict any changes in the node object. However, they can be
                          referenced from other rules enabling more complex rule hierarchies,
                          without exposing intermediary output values as labels.
                        type: object
                      varsTemplate:
                        description: |-
                          VarsTemplate specifies a template to expand for dynamically generating
                          multiple variables. Data (after template expansion) must be keys with an
                          optional value (<key>[=<value>]) separated by newlines.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              required:
              - rules
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.16.3
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.16.3"},"name":"nodefeatures.nfd.k8s-sigs.io"},"spec":{"group":"nfd.k8s-sigs.io","names":{"kind":"NodeFeature","listKind":"NodeFeatureList","plural":"nodefeatures","singular":"nodefeature"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"NodeFeature resource holds the features discovered for one node in the\ncluster.","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Specification of the NodeFeature, containing features discovered for a node.","properties":{"features":{"description":"Features is the full \"raw\" features data that has been discovered.","properties":{"attributes":{"additionalProperties":{"description":"AttributeFeatureSet is a set of features having string value.","properties":{"elements":{"additionalProperties":{"type":"string"},"description":"Individual features of the feature set.","type":"object"}},"required":["elements"],"type":"object"},"description":"Attributes contains all the attribute-type features of the node.","type":"object"},"flags":{"additionalProperties":{"description":"FlagFeatureSet is a set of simple features only containing names without values.","properties":{"elements":{"additionalProperties":{"description":"Nil is a dummy empty struct for protobuf compatibility.\nNOTE: protobuf definitions have been removed but this is kept for API compatibility.","type":"object"},"description":"Individual features of the feature set.","type":"object"}},"required":["elements"],"type":"object"},"description":"Flags contains all the flag-type features of the node.","type":"object"},"instances":{"additionalProperties":{"description":"InstanceFeatureSet is a set of features each of which is an instance having multiple attributes.","properties":{"elements":{"description":"Individual features of the feature set.","items":{"description":"InstanceFeature represents one instance of a complex features, e.g. a device.","properties":{"attributes":{"additionalProperties":{"type":"string"},"description":"Attributes of the instance feature.","type":"object"}},"required":["attributes"],"type":"object"},"type":"array"}},"required":["elements"],"type":"object"},"description":"Instances contains all the instance-type features of the node.","type":"object"}},"type":"object"},"labels":{"additionalProperties":{"type":"string"},"description":"Labels is the set of node labels that are requested to be created.","type":"object"}},"type":"object"}},"required":["spec"],"type":"object"}},"served":true,"storage":true}]}}
    name: nodefeatures.nfd.k8s-sigs.io
  spec:
    group: nfd.k8s-sigs.io
    names:
      kind: NodeFeature
      listKind: NodeFeatureList
      plural: nodefeatures
      singular: nodefeature
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            NodeFeature resource holds the features discovered for one node in the
            cluster.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Specification of the NodeFeature, containing features discovered
                for a node.
              properties:
                features:
                  description: Features is the full "raw" features data that has been
                    discovered.
                  properties:
                    attributes:
                      additionalProperties:
                        description: AttributeFeatureSet is a set of features having
                          string value.
                        properties:
                          elements:
                            additionalProperties:
                              type: string
                            description: Individual features of the feature set.
                            type: object
                        required:
                        - elements
                        type: object
                      description: Attributes contains all the attribute-type features
                        of the node.
                      type: object
                    flags:
                      additionalProperties:
                        description: FlagFeatureSet is a set of simple features only
                          containing names without values.
                        properties:
                          elements:
                            additionalProperties:
                              description: |-
                                Nil is a dummy empty struct for protobuf compatibility.
                                NOTE: protobuf definitions have been removed but this is kept for API compatibility.
                              type: object
                            description: Individual features of the feature set.
                            type: object
                        required:
                        - elements
                        type: object
                      description: Flags contains all the flag-type features of the
                        node.
                      type: object
                    instances:
                      additionalProperties:
                        description: InstanceFeatureSet is a set of features each
                          of which is an instance having multiple attributes.
                        properties:
                          elements:
                            description: Individual features of the feature set.
                            items:
                              description: InstanceFeature represents one instance
                                of a complex features, e.g. a device.
                              properties:
                                attributes:
                                  additionalProperties:
                                    type: string
                                  description: Attributes of the instance feature.
                                  type: object
                              required:
                              - attributes
                              type: object
                            type: array
                        required:
                        - elements
                        type: object
                      description: Instances contains all the instance-type features
                        of the node.
                      type: object
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  description: Labels is the set of node labels that are requested
                    to be created.
                  type: object
              type: object
          required:
          - spec
          type: object
      served: true
      storage: true
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"nfd-gc","namespace":"node-feature-discovery"}}
    name: nfd-gc
    namespace: node-feature-discovery
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"nfd-master","namespace":"node-feature-discovery"}}
    name: nfd-master
    namespace: node-feature-discovery
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"nfd-worker","namespace":"node-feature-discovery"}}
    name: nfd-worker
    namespace: node-feature-discovery
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"nfd-worker","namespace":"node-feature-discovery"},"rules":[{"apiGroups":["nfd.k8s-sigs.io"],"resources":["nodefeatures"],"verbs":["create","get","update","delete"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get"]}]}
    name: nfd-worker
    namespace: node-feature-discovery
  rules:
  - apiGroups:
    - nfd.k8s-sigs.io
    resources:
    - nodefeatures
    verbs:
    - create
    - get
    - update
    - delete
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"nfd-gc"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["nodes/proxy"],"verbs":["get"]},{"apiGroups":["topology.node.k8s.io"],"resources":["noderesourcetopologies"],"verbs":["delete","list"]},{"apiGroups":["nfd.k8s-sigs.io"],"resources":["nodefeatures"],"verbs":["delete","list"]}]}
    name: nfd-gc
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/proxy
    verbs:
    - get
  - apiGroups:
    - topology.node.k8s.io
    resources:
    - noderesourcetopologies
    verbs:
    - delete
    - list
  - apiGroups:
    - nfd.k8s-sigs.io
    resources:
    - nodefeatures
    verbs:
    - delete
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"nfd-master"},"rules":[{"apiGroups":[""],"resources":["namespaces"],"verbs":["watch","list"]},{"apiGroups":[""],"resources":["nodes","nodes/status"],"verbs":["get","patch","update","list"]},{"apiGroups":["nfd.k8s-sigs.io"],"resources":["nodefeatures","nodefeaturerules","nodefeaturegroups"],"verbs":["get","list","watch"]},{"apiGroups":["nfd.k8s-sigs.io"],"resources":["nodefeaturegroup/status"],"verbs":["patch","update"]},{"apiGroups":["coordination.k8s.io"],"resources":["leases"],"verbs":["create"]},{"apiGroups":["coordination.k8s.io"],"resourceNames":["nfd-master.nfd.kubernetes.io"],"resources":["leases"],"verbs":["get","update"]}]}
    name: nfd-master
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - watch
    - list
  - apiGroups:
    - ""
    resources:
    - nodes
    - nodes/status
    verbs:
    - get
    - patch
    - update
    - list
  - apiGroups:
    - nfd.k8s-sigs.io
    resources:
    - nodefeatures
    - nodefeaturerules
    - nodefeaturegroups
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - nfd.k8s-sigs.io
    resources:
    - nodefeaturegroup/status
    verbs:
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - nfd-master.nfd.kubernetes.io
    resources:
    - leases
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"nfd-worker","namespace":"node-feature-discovery"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"nfd-worker"},"subjects":[{"kind":"ServiceAccount","name":"nfd-worker","namespace":"node-feature-discovery"}]}
    name: nfd-worker
    namespace: node-feature-discovery
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: nfd-worker
  subjects:
  - kind: ServiceAccount
    name: nfd-worker
    namespace: node-feature-discovery
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"nfd-gc"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"nfd-gc"},"subjects":[{"kind":"ServiceAccount","name":"nfd-gc","namespace":"node-feature-discovery"}]}
    name: nfd-gc
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: nfd-gc
  subjects:
  - kind: ServiceAccount
    name: nfd-gc
    namespace: node-feature-discovery
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"nfd-master"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"nfd-master"},"subjects":[{"kind":"ServiceAccount","name":"nfd-master","namespace":"node-feature-discovery"}]}
    name: nfd-master
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: nfd-master
  subjects:
  - kind: ServiceAccount
    name: nfd-master
    namespace: node-feature-discovery
- apiVersion: v1
  data:
    nfd-master.conf: |
      # noPublish: false
      # autoDefaultNs: true
      # extraLabelNs: ["added.ns.io","added.kubernets.io"]
      # denyLabelNs: ["denied.ns.io","denied.kubernetes.io"]
      # enableTaints: false
      # labelWhiteList: "foo"
      # resyncPeriod: "2h"
      # restrictions:
      #   disableLabels: true
      #   disableTaints: true
      #   disableExtendedResources: true
      #   disableAnnotations: true
      #   allowOverwrite: false
      #   denyNodeFeatureLabels: true
      #   nodeFeatureNamespaceSelector:
      #    matchLabels:
      #      kubernetes.io/metadata.name: "node-feature-discovery"
      #    matchExpressions:
      #      - key: "kubernetes.io/metadata.name"
      #        operator: "In"
      #        values:
      #           - "node-feature-discovery"
      # klog:
      #    addDirHeader: false
      #    alsologtostderr: false
      #    logBacktraceAt:
      #    logtostderr: true
      #    skipHeaders: false
      #    stderrthreshold: 2
      #    v: 0
      #    vmodule:
      ##   NOTE: the following options are not dynamically run-time configurable
      ##         and require a nfd-master restart to take effect after being changed
      #    logDir:
      #    logFile:
      #    logFileMaxSize: 1800
      #    skipLogHeaders: false
      # leaderElection:
      #   leaseDuration: 15s
      #   # this value has to be lower than leaseDuration and greater than retryPeriod*1.2
      #   renewDeadline: 10s
      #   # this value has to be greater than 0
      #   retryPeriod: 2s
      # nfdApiParallelism: 10
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"nfd-master.conf":"# noPublish: false\n# autoDefaultNs: true\n# extraLabelNs: [\"added.ns.io\",\"added.kubernets.io\"]\n# denyLabelNs: [\"denied.ns.io\",\"denied.kubernetes.io\"]\n# enableTaints: false\n# labelWhiteList: \"foo\"\n# resyncPeriod: \"2h\"\n# restrictions:\n#   disableLabels: true\n#   disableTaints: true\n#   disableExtendedResources: true\n#   disableAnnotations: true\n#   allowOverwrite: false\n#   denyNodeFeatureLabels: true\n#   nodeFeatureNamespaceSelector:\n#    matchLabels:\n#      kubernetes.io/metadata.name: \"node-feature-discovery\"\n#    matchExpressions:\n#      - key: \"kubernetes.io/metadata.name\"\n#        operator: \"In\"\n#        values:\n#           - \"node-feature-discovery\"\n# klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time configurable\n##         and require a nfd-master restart to take effect after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\n# leaderElection:\n#   leaseDuration: 15s\n#   # this value has to be lower than leaseDuration and greater than retryPeriod*1.2\n#   renewDeadline: 10s\n#   # this value has to be greater than 0\n#   retryPeriod: 2s\n# nfdApiParallelism: 10\n"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"nfd-master-conf-9mfc26f2tc","namespace":"node-feature-discovery"}}
    name: nfd-master-conf-9mfc26f2tc
    namespace: node-feature-discovery
- apiVersion: v1
  data:
    nfd-worker.conf: |
      core:
        labelSources:
         - "local"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"nfd-worker.conf":"core:\n  labelSources:\n   - \"local\"\n"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"nfd-worker-conf-82th75ht67","namespace":"node-feature-discovery"}}
    name: nfd-worker-conf-82th75ht67
    namespace: node-feature-discovery
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nfd"},"name":"nfd-gc","namespace":"node-feature-discovery"},"spec":{"selector":{"matchLabels":{"app":"nfd-gc"}},"template":{"metadata":{"labels":{"app":"nfd-gc"}},"spec":{"containers":[{"command":["nfd-gc"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"registry.k8s.io/nfd/node-feature-discovery:v0.17.1","imagePullPolicy":"IfNotPresent","name":"nfd-gc","ports":[{"containerPort":8081,"name":"metrics"}],"resources":{"limits":{"cpu":"20m","memory":"1Gi"},"requests":{"cpu":"10m","memory":"128Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true}}],"dnsPolicy":"ClusterFirstWithHostNet","serviceAccount":"nfd-gc"}}}}
    labels:
      app: nfd
    name: nfd-gc
    namespace: node-feature-discovery
  spec:
    selector:
      matchLabels:
        app: nfd-gc
    template:
      metadata:
        labels:
          app: nfd-gc
      spec:
        containers:
        - command:
          - nfd-gc
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          image: registry.k8s.io/nfd/node-feature-discovery:v0.17.1
          imagePullPolicy: IfNotPresent
          name: nfd-gc
          ports:
          - containerPort: 8081
            name: metrics
          resources:
            limits:
              cpu: 20m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        dnsPolicy: ClusterFirstWithHostNet
        serviceAccount: nfd-gc
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nfd"},"name":"nfd-master","namespace":"node-feature-discovery"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"nfd-master"}},"template":{"metadata":{"labels":{"app":"nfd-master"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/master","operator":"In","values":[""]}]},"weight":1},{"preference":{"matchExpressions":[{"key":"node-role.kubernetes.io/control-plane","operator":"In","values":[""]}]},"weight":1}]}},"containers":[{"command":["nfd-master"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"registry.k8s.io/nfd/node-feature-discovery:v0.17.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"grpc":{"port":8082}},"name":"nfd-master","ports":[{"containerPort":8081,"name":"metrics"}],"readinessProbe":{"failureThreshold":10,"grpc":{"port":8082}},"resources":{"limits":{"cpu":"300m","memory":"4Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"startupProbe":{"failureThreshold":30,"grpc":{"port":8082}},"volumeMounts":[{"mountPath":"/etc/kubernetes/node-feature-discovery","name":"nfd-master-conf","readOnly":true}]}],"enableServiceLinks":false,"serviceAccount":"nfd-master","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":""},{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Equal","value":""}],"volumes":[{"configMap":{"name":"nfd-master-conf-9mfc26f2tc"},"name":"nfd-master-conf"}]}}}}
    labels:
      app: nfd
    name: nfd-master
    namespace: node-feature-discovery
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: nfd-master
    template:
      metadata:
        labels:
          app: nfd-master
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - ""
              weight: 1
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: In
                  values:
                  - ""
              weight: 1
        containers:
        - command:
          - nfd-master
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          image: registry.k8s.io/nfd/node-feature-discovery:v0.17.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            grpc:
              port: 8082
          name: nfd-master
          ports:
          - containerPort: 8081
            name: metrics
          readinessProbe:
            failureThreshold: 10
            grpc:
              port: 8082
          resources:
            limits:
              cpu: 300m
              memory: 4Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          startupProbe:
            failureThreshold: 30
            grpc:
              port: 8082
          volumeMounts:
          - mountPath: /etc/kubernetes/node-feature-discovery
            name: nfd-master-conf
            readOnly: true
        enableServiceLinks: false
        serviceAccount: nfd-master
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
          value: ""
        volumes:
        - configMap:
            name: nfd-master-conf-9mfc26f2tc
          name: nfd-master-conf
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"app":"nfd"},"name":"nfd-worker","namespace":"node-feature-discovery"},"spec":{"selector":{"matchLabels":{"app":"nfd-worker"}},"template":{"metadata":{"labels":{"app":"nfd-worker"}},"spec":{"containers":[{"command":["nfd-worker"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_UID","valueFrom":{"fieldRef":{"fieldPath":"metadata.uid"}}}],"image":"registry.k8s.io/nfd/node-feature-discovery:v0.17.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"grpc":{"port":8082},"initialDelaySeconds":10,"periodSeconds":10},"name":"nfd-worker","ports":[{"containerPort":8081,"name":"metrics"}],"readinessProbe":{"failureThreshold":10,"grpc":{"port":8082},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"200m","memory":"512Mi"},"requests":{"cpu":"5m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"volumeMounts":[{"mountPath":"/host-boot","name":"host-boot","readOnly":true},{"mountPath":"/host-etc/os-release","name":"host-os-release","readOnly":true},{"mountPath":"/host-sys","name":"host-sys","readOnly":true},{"mountPath":"/host-proc/swaps","name":"host-proc-swaps","readOnly":true},{"mountPath":"/host-usr/lib","name":"host-usr-lib","readOnly":true},{"mountPath":"/host-lib","name":"host-lib","readOnly":true},{"mountPath":"/etc/kubernetes/node-feature-discovery/features.d/","name":"features-d","readOnly":true},{"mountPath":"/etc/kubernetes/node-feature-discovery","name":"nfd-worker-conf","readOnly":true}]}],"dnsPolicy":"ClusterFirstWithHostNet","serviceAccount":"nfd-worker","volumes":[{"hostPath":{"path":"/boot"},"name":"host-boot"},{"hostPath":{"path":"/proc/swaps"},"name":"host-proc-swaps"},{"hostPath":{"path":"/etc/os-release"},"name":"host-os-release"},{"hostPath":{"path":"/sys"},"name":"host-sys"},{"hostPath":{"path":"/usr/lib"},"name":"host-usr-lib"},{"hostPath":{"path":"/lib"},"name":"host-lib"},{"hostPath":{"path":"/etc/kubernetes/node-feature-discovery/features.d/"},"name":"features-d"},{"configMap":{"name":"nfd-worker-conf-82th75ht67"},"name":"nfd-worker-conf"}]}}}}
    labels:
      app: nfd
    name: nfd-worker
    namespace: node-feature-discovery
  spec:
    selector:
      matchLabels:
        app: nfd-worker
    template:
      metadata:
        labels:
          app: nfd-worker
      spec:
        containers:
        - command:
          - nfd-worker
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_UID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid
          image: registry.k8s.io/nfd/node-feature-discovery:v0.17.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            grpc:
              port: 8082
            initialDelaySeconds: 10
            periodSeconds: 10
          name: nfd-worker
          ports:
          - containerPort: 8081
            name: metrics
          readinessProbe:
            failureThreshold: 10
            grpc:
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
          - mountPath: /host-boot
            name: host-boot
            readOnly: true
          - mountPath: /host-etc/os-release
            name: host-os-release
            readOnly: true
          - mountPath: /host-sys
            name: host-sys
            readOnly: true
          - mountPath: /host-proc/swaps
            name: host-proc-swaps
            readOnly: true
          - mountPath: /host-usr/lib
            name: host-usr-lib
            readOnly: true
          - mountPath: /host-lib
            name: host-lib
            readOnly: true
          - mountPath: /etc/kubernetes/node-feature-discovery/features.d/
            name: features-d
            readOnly: true
          - mountPath: /etc/kubernetes/node-feature-discovery
            name: nfd-worker-conf
            readOnly: true
        dnsPolicy: ClusterFirstWithHostNet
        serviceAccount: nfd-worker
        volumes:
        - hostPath:
            path: /boot
          name: host-boot
        - hostPath:
            path: /proc/swaps
          name: host-proc-swaps
        - hostPath:
            path: /etc/os-release
          name: host-os-release
        - hostPath:
            path: /sys
          name: host-sys
        - hostPath:
            path: /usr/lib
          name: host-usr-lib
        - hostPath:
            path: /lib
          name: host-lib
        - hostPath:
            path: /etc/kubernetes/node-feature-discovery/features.d/
          name: features-d
        - configMap:
            name: nfd-worker-conf-82th75ht67
          name: nfd-worker-conf
kind: List
metadata: {}

---

